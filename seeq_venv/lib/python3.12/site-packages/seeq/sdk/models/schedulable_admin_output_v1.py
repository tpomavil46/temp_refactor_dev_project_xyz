# coding: utf-8

"""
    Seeq REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 66.4.0-v202412241102-CD
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class SchedulableAdminOutputV1(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'average_run_time': 'int',
        'content_count': 'int',
        'document_id': 'str',
        'id': 'str',
        'last_run_time': 'str',
        'last_updated': 'str',
        'last_viewed_at': 'str',
        'name': 'str',
        'next_run_time': 'str',
        'owner': 'str',
        'schedulable_type': 'str',
        'schedules': 'list[str]',
        'status_message': 'str',
        'topic_id': 'str',
        'total_run_time': 'int'
    }

    attribute_map = {
        'average_run_time': 'averageRunTime',
        'content_count': 'contentCount',
        'document_id': 'documentId',
        'id': 'id',
        'last_run_time': 'lastRunTime',
        'last_updated': 'lastUpdated',
        'last_viewed_at': 'lastViewedAt',
        'name': 'name',
        'next_run_time': 'nextRunTime',
        'owner': 'owner',
        'schedulable_type': 'schedulableType',
        'schedules': 'schedules',
        'status_message': 'statusMessage',
        'topic_id': 'topicId',
        'total_run_time': 'totalRunTime'
    }

    def __init__(self, average_run_time=None, content_count=None, document_id=None, id=None, last_run_time=None, last_updated=None, last_viewed_at=None, name=None, next_run_time=None, owner=None, schedulable_type=None, schedules=None, status_message=None, topic_id=None, total_run_time=None):
        """
        SchedulableAdminOutputV1 - a model defined in Swagger
        """

        self._average_run_time = None
        self._content_count = None
        self._document_id = None
        self._id = None
        self._last_run_time = None
        self._last_updated = None
        self._last_viewed_at = None
        self._name = None
        self._next_run_time = None
        self._owner = None
        self._schedulable_type = None
        self._schedules = None
        self._status_message = None
        self._topic_id = None
        self._total_run_time = None

        if average_run_time is not None:
          self.average_run_time = average_run_time
        if content_count is not None:
          self.content_count = content_count
        if document_id is not None:
          self.document_id = document_id
        if id is not None:
          self.id = id
        if last_run_time is not None:
          self.last_run_time = last_run_time
        if last_updated is not None:
          self.last_updated = last_updated
        if last_viewed_at is not None:
          self.last_viewed_at = last_viewed_at
        if name is not None:
          self.name = name
        if next_run_time is not None:
          self.next_run_time = next_run_time
        if owner is not None:
          self.owner = owner
        if schedulable_type is not None:
          self.schedulable_type = schedulable_type
        if schedules is not None:
          self.schedules = schedules
        if status_message is not None:
          self.status_message = status_message
        if topic_id is not None:
          self.topic_id = topic_id
        if total_run_time is not None:
          self.total_run_time = total_run_time

    @property
    def average_run_time(self):
        """
        Gets the average_run_time of this SchedulableAdminOutputV1.
        Average run time when run

        :return: The average_run_time of this SchedulableAdminOutputV1.
        :rtype: int
        """
        return self._average_run_time

    @average_run_time.setter
    def average_run_time(self, average_run_time):
        """
        Sets the average_run_time of this SchedulableAdminOutputV1.
        Average run time when run

        :param average_run_time: The average_run_time of this SchedulableAdminOutputV1.
        :type: int
        """
        if average_run_time is None:
            raise ValueError("Invalid value for `average_run_time`, must not be `None`")

        self._average_run_time = average_run_time

    @property
    def content_count(self):
        """
        Gets the content_count of this SchedulableAdminOutputV1.
        The number of non-archived pieces of content if item is a report

        :return: The content_count of this SchedulableAdminOutputV1.
        :rtype: int
        """
        return self._content_count

    @content_count.setter
    def content_count(self, content_count):
        """
        Sets the content_count of this SchedulableAdminOutputV1.
        The number of non-archived pieces of content if item is a report

        :param content_count: The content_count of this SchedulableAdminOutputV1.
        :type: int
        """
        if content_count is None:
            raise ValueError("Invalid value for `content_count`, must not be `None`")

        self._content_count = content_count

    @property
    def document_id(self):
        """
        Gets the document_id of this SchedulableAdminOutputV1.
        The document's ID if item is a report

        :return: The document_id of this SchedulableAdminOutputV1.
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """
        Sets the document_id of this SchedulableAdminOutputV1.
        The document's ID if item is a report

        :param document_id: The document_id of this SchedulableAdminOutputV1.
        :type: str
        """

        self._document_id = document_id

    @property
    def id(self):
        """
        Gets the id of this SchedulableAdminOutputV1.
        The id of the item

        :return: The id of this SchedulableAdminOutputV1.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this SchedulableAdminOutputV1.
        The id of the item

        :param id: The id of this SchedulableAdminOutputV1.
        :type: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def last_run_time(self):
        """
        Gets the last_run_time of this SchedulableAdminOutputV1.
        The last time the schedule ran

        :return: The last_run_time of this SchedulableAdminOutputV1.
        :rtype: str
        """
        return self._last_run_time

    @last_run_time.setter
    def last_run_time(self, last_run_time):
        """
        Sets the last_run_time of this SchedulableAdminOutputV1.
        The last time the schedule ran

        :param last_run_time: The last_run_time of this SchedulableAdminOutputV1.
        :type: str
        """

        self._last_run_time = last_run_time

    @property
    def last_updated(self):
        """
        Gets the last_updated of this SchedulableAdminOutputV1.
        The last time the item was updated

        :return: The last_updated of this SchedulableAdminOutputV1.
        :rtype: str
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """
        Sets the last_updated of this SchedulableAdminOutputV1.
        The last time the item was updated

        :param last_updated: The last_updated of this SchedulableAdminOutputV1.
        :type: str
        """
        if last_updated is None:
            raise ValueError("Invalid value for `last_updated`, must not be `None`")

        self._last_updated = last_updated

    @property
    def last_viewed_at(self):
        """
        Gets the last_viewed_at of this SchedulableAdminOutputV1.
        The last time the item was looked at

        :return: The last_viewed_at of this SchedulableAdminOutputV1.
        :rtype: str
        """
        return self._last_viewed_at

    @last_viewed_at.setter
    def last_viewed_at(self, last_viewed_at):
        """
        Sets the last_viewed_at of this SchedulableAdminOutputV1.
        The last time the item was looked at

        :param last_viewed_at: The last_viewed_at of this SchedulableAdminOutputV1.
        :type: str
        """

        self._last_viewed_at = last_viewed_at

    @property
    def name(self):
        """
        Gets the name of this SchedulableAdminOutputV1.
        The name of the item

        :return: The name of this SchedulableAdminOutputV1.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this SchedulableAdminOutputV1.
        The name of the item

        :param name: The name of this SchedulableAdminOutputV1.
        :type: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def next_run_time(self):
        """
        Gets the next_run_time of this SchedulableAdminOutputV1.
        The next time the schedule will run

        :return: The next_run_time of this SchedulableAdminOutputV1.
        :rtype: str
        """
        return self._next_run_time

    @next_run_time.setter
    def next_run_time(self, next_run_time):
        """
        Sets the next_run_time of this SchedulableAdminOutputV1.
        The next time the schedule will run

        :param next_run_time: The next_run_time of this SchedulableAdminOutputV1.
        :type: str
        """

        self._next_run_time = next_run_time

    @property
    def owner(self):
        """
        Gets the owner of this SchedulableAdminOutputV1.
        The owner of the item

        :return: The owner of this SchedulableAdminOutputV1.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """
        Sets the owner of this SchedulableAdminOutputV1.
        The owner of the item

        :param owner: The owner of this SchedulableAdminOutputV1.
        :type: str
        """

        self._owner = owner

    @property
    def schedulable_type(self):
        """
        Gets the schedulable_type of this SchedulableAdminOutputV1.
        The type of the item

        :return: The schedulable_type of this SchedulableAdminOutputV1.
        :rtype: str
        """
        return self._schedulable_type

    @schedulable_type.setter
    def schedulable_type(self, schedulable_type):
        """
        Sets the schedulable_type of this SchedulableAdminOutputV1.
        The type of the item

        :param schedulable_type: The schedulable_type of this SchedulableAdminOutputV1.
        :type: str
        """
        if schedulable_type is None:
            raise ValueError("Invalid value for `schedulable_type`, must not be `None`")
        allowed_values = ["Scheduled", "Live", "Static", "ConditionMonitor"]
        if schedulable_type not in allowed_values:
            raise ValueError(
                "Invalid value for `schedulable_type` ({0}), must be one of {1}"
                .format(schedulable_type, allowed_values)
            )

        self._schedulable_type = schedulable_type

    @property
    def schedules(self):
        """
        Gets the schedules of this SchedulableAdminOutputV1.
        A human readable representation of the cron schedules

        :return: The schedules of this SchedulableAdminOutputV1.
        :rtype: list[str]
        """
        return self._schedules

    @schedules.setter
    def schedules(self, schedules):
        """
        Sets the schedules of this SchedulableAdminOutputV1.
        A human readable representation of the cron schedules

        :param schedules: The schedules of this SchedulableAdminOutputV1.
        :type: list[str]
        """

        self._schedules = schedules

    @property
    def status_message(self):
        """
        Gets the status_message of this SchedulableAdminOutputV1.
        A plain language status message with information about any issues that may have been encountered during an operation. Null if the status message has not been set.

        :return: The status_message of this SchedulableAdminOutputV1.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """
        Sets the status_message of this SchedulableAdminOutputV1.
        A plain language status message with information about any issues that may have been encountered during an operation. Null if the status message has not been set.

        :param status_message: The status_message of this SchedulableAdminOutputV1.
        :type: str
        """

        self._status_message = status_message

    @property
    def topic_id(self):
        """
        Gets the topic_id of this SchedulableAdminOutputV1.
        The topic's ID if item is a report

        :return: The topic_id of this SchedulableAdminOutputV1.
        :rtype: str
        """
        return self._topic_id

    @topic_id.setter
    def topic_id(self, topic_id):
        """
        Sets the topic_id of this SchedulableAdminOutputV1.
        The topic's ID if item is a report

        :param topic_id: The topic_id of this SchedulableAdminOutputV1.
        :type: str
        """

        self._topic_id = topic_id

    @property
    def total_run_time(self):
        """
        Gets the total_run_time of this SchedulableAdminOutputV1.
        Sum of the run times

        :return: The total_run_time of this SchedulableAdminOutputV1.
        :rtype: int
        """
        return self._total_run_time

    @total_run_time.setter
    def total_run_time(self, total_run_time):
        """
        Sets the total_run_time of this SchedulableAdminOutputV1.
        Sum of the run times

        :param total_run_time: The total_run_time of this SchedulableAdminOutputV1.
        :type: int
        """
        if total_run_time is None:
            raise ValueError("Invalid value for `total_run_time`, must not be `None`")

        self._total_run_time = total_run_time

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, SchedulableAdminOutputV1):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
