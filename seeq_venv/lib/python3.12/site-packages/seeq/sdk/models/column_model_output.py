# coding: utf-8

"""
    Seeq REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 66.4.0-v202412241102-CD
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class ColumnModelOutput(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dependents': 'list[ColumnDefinitionInputV1]',
        'independents': 'list[ColumnDefinitionInputV1]'
    }

    attribute_map = {
        'dependents': 'dependents',
        'independents': 'independents'
    }

    def __init__(self, dependents=None, independents=None):
        """
        ColumnModelOutput - a model defined in Swagger
        """

        self._dependents = None
        self._independents = None

        if dependents is not None:
          self.dependents = dependents
        if independents is not None:
          self.independents = independents

    @property
    def dependents(self):
        """
        Gets the dependents of this ColumnModelOutput.

        :return: The dependents of this ColumnModelOutput.
        :rtype: list[ColumnDefinitionInputV1]
        """
        return self._dependents

    @dependents.setter
    def dependents(self, dependents):
        """
        Sets the dependents of this ColumnModelOutput.

        :param dependents: The dependents of this ColumnModelOutput.
        :type: list[ColumnDefinitionInputV1]
        """

        self._dependents = dependents

    @property
    def independents(self):
        """
        Gets the independents of this ColumnModelOutput.

        :return: The independents of this ColumnModelOutput.
        :rtype: list[ColumnDefinitionInputV1]
        """
        return self._independents

    @independents.setter
    def independents(self, independents):
        """
        Sets the independents of this ColumnModelOutput.

        :param independents: The independents of this ColumnModelOutput.
        :type: list[ColumnDefinitionInputV1]
        """

        self._independents = independents

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ColumnModelOutput):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
